{
	"React Functional Component": {
	  "prefix": "rfc",
	  "body": [
		"import clsx from 'clsx'",
		"import {FC} from \"react\"",
		"import { useTranslation } from \"react-i18next\"",
		"import styles from \"./$TM_FILENAME_BASE.module.scss\"",
		"",
		"export interface $I$TM_FILENAME_BASE$Props {",
		"className?: string",
		"}",
		"const $TM_FILENAME_BASE: FC<$I$TM_FILENAME_BASE$Props> = (props) => {",
		"const { className } = props",
		"const { t } = useTranslation()",
		"",
		"  return (",
		"    <div className={clsx(styles.$TM_FILENAME_BASE, className)}>",
		"      $2",
		"    </div>",
		"  )",
		"};",
		"",
		"export default $TM_FILENAME_BASE;",
		""
	  ],
	  "description": "React Functional Component"
	},
	"Redux Slice": {
		"prefix": "sl",
		"body": [
			"import { createSlice, PayloadAction } from '@reduxjs/toolkit'",
			"import { initial${1:name}State } from './state'",
			"",
			"export const ${1:name}Slice = createSlice({",
  			"name: '${1:name}',",
  			"initialState: initial${1:name}State,",
  			"reducers: {},",
  			"extraReducers: (builder) => {",
			"",
			"}",
			"})",

			"export const { actions: ${1:name}Actions, reducer: ${1:name}Reducer } = ${1:name}Slice"
		]
	},
	"HOC": {
		"prefix": "hoc",
		"body": [
			"import {ComponentType} from 'react'",
			"",
			"interface IProps extends JSX.IntrinsicAttributes {",
			"",
			"}",
			"",
			"function with${1:name} <P extends IProps> (Component: ComponentType<P>) {",
			"return function HOC${1:name} (props: P) {",
			"return (",
			"<Component {...props} />",
  			")",
  			"}",
  			"}",
			"",
			"export default with${1:name}"
		]
	}
  }